#!/bin/bash

# setup virtualenv and python depts
envd="venv"
if [ -d './venv' ]
then
    rm -rf ./venv
fi
if [ -d './env' ]
then
    rm -rf ./env
    envd="env"
fi

virtualenv $envd -p python3
source ./$envd/bin/activate
pip install -r requirements.txt

# cleanup
if [ -d './build' ]
then
    rm -rf ./build
fi
mkdir ./build

# klee: top level folders
cd ./klee
ksip="$(pwd)"
cd ..

cd ./klee-uclibc
ksucip="$(pwd)"
cd ..

mkdir ./build/libc++
cd ./build/libc++
cppip="$(pwd)"
cd ../..

# configure uClibc and POSIX ()
uname="$(uname -s)"
case "${uname}" in
    Linux*)     machine=0;;
    *)          machine=1;;
esac

command -v "clang-9" &> /dev/null

if [[ $? -eq 0 ]]
then
    cc="$(command -v 'clang-9')"
    cpp="$(command -v 'clang++-9')"
    lc="$(command -v 'llvm-config-9')"
else
    cc="$(command -v 'clang')"
    cpp="$(command -v 'clang++')"
    lc="$(command -v 'llvm-config')"
fi

if [[ $machine -eq 0 ]]
then
    cd ./klee-uclibc
    ./configure --make-llvm-lib --with-cc=$cc  --with-llvm-config=$lc
    make -j2
    cd ..
else
    echo "Unable to configure uClibc and POSIX compatibility..."
fi

# klee: build libc++
cd ./klee
export LLVM_VERSION=9
export SANITIZER_BUILD=
export BASE=$cppip
export REQUIRES_RTTI=1
export DISABLE_ASSERTIONS=1
export ENABLE_DEBUG=0
export ENABLE_OPTIMIZED=1
./scripts/build/build.sh libcxx
cd ..

# klee: configure klee
if [ -d './klee/build' ]
then
    rm -rf ./klee/build
fi
mkdir ./klee/build

cd ./klee/build
if [[ $machine -eq 0 ]]
then
    cmake \
        -DENABLE_SOLVER_Z3=ON \
        -DENABLE_POSIX_RUNTIME=ON \
        -DENABLE_KLEE_UCLIBC=ON \
        -DKLEE_UCLIBC_PATH=$ksucip \
        -DENABLE_KLEE_LIBCXX=ON \
        -DKLEE_LIBCXX_DIR=$cppip/libc++-install-90/ \
        -DKLEE_LIBCXX_INCLUDE_DIR=$cppip/libc++-install-90/include/c++/v1/ \
        -DENABLE_KLEE_EH_CXX=ON \
        -DKLEE_LIBCXXABI_SRC_DIR=$cppip/llvm-90/libcxxabi/ \
        -DENABLE_UNIT_TESTS=OFF \
        -DENABLE_SYSTEM_TESTS=OFF \
        -DLLVM_CONFIG_BINARY=$lc \
        -DLLVMCC=$cc \
        -DLLVMCXX=$cpp \
        $ksip
else
    cmake \
        -DENABLE_SOLVER_Z3=ON \
        -DENABLE_KLEE_LIBCXX=ON \
        -DKLEE_LIBCXX_DIR=$cppip/libc++-install-90/ \
        -DKLEE_LIBCXX_INCLUDE_DIR=$cppip/libc++-install-90/include/c++/v1/ \
        -DENABLE_KLEE_EH_CXX=ON \
        -DKLEE_LIBCXXABI_SRC_DIR=$cppip/llvm-9/libcxxabi/ \
        -DENABLE_UNIT_TESTS=OFF \
        -DENABLE_SYSTEM_TESTS=OFF \
        -DLLVM_CONFIG_BINARY=$lc \
        -DLLVMCC=$cc \
        -DLLVMCXX=$cpp \
        $ksip
fi

make -j2
cd ../..

# cvc5 and python bindings
cd ./cvc5
./configure.sh --python-bindings --auto-download -DPYTHON_INCLUDE_DIR=$(python -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())")  -DPYTHON_LIBRARY=$(python -c "import distutils.sysconfig as sysconfig; print(sysconfig.get_config_var('LIBDIR'))")
cd ./build
make -j2
cd ..
cd ./src/api/python
python setup.py install

cd ../../../..

#llvm3.4 for klee-float

cd ./llvm-project
llvmip="$(pwd)"

git reset --hard d13f57a1a1a1cc23c97bf5b99b89f28f8b8c1149 # release 3.4
git clean -fdx
mkdir ./build
mkdir ./release
mv ./clang ./llvm/tools
mv ./clang-tools-extra ./llvm/tools/clang/tools
cd ./build

../llvm/configure --prefix=$llvmip/release --with-python=py2 --enable-cxx11
make -j2
make install

cd ../..

#klee-float

cd ./klee-float
kfsip="$(pwd)"
cd ..

if [ -d './klee-float/build' ]
then
    rm -rf ./klee-float/build
fi
mkdir ./klee-float/build

cd ./klee-float/build
cmake \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo \
    -DENABLE_KLEE_ASSERTS=ON \
    -DENABLE_KLEE_UCLIBC=ON \
    -DKLEE_UCLIBC_PATH=$ksucip \
    -DENABLE_POSIX_RUNTIME=OFF \
    -DENABLE_SOLVER_Z3=ON \
    -DENABLE_TCMALLOC=OFF \
    -DLLVM_CONFIG_BINARY=$llvmip/release/bin/llvm-config \
    -DLLVMCC=$llvmip/release/bin/clang \
    -DLLVMCXX=$llvmip/release/bin/clang++ \
    -DENABLE_UNIT_TESTS=OFF \
    -DENABLE_SYSTEM_TESTS=OFF \
    $kfsip

make -j2

deactivate
